package GreetingLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Person_Constraints extends BaseConstraintsDescriptor {
  public Person_Constraints() {
    super(CONCEPTS.Person$Kx);
  }

  public static class Height_Property extends BasePropertyConstraintsDescriptor {
    public Height_Property(ConstraintsDescriptor container) {
      super(PROPS.height$44Dh, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:c25848ed-7046-47d8-8d62-526cefd8e26f(GreetingLanguage.constraints)", "6205122835526742859"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue > 0;
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.height$44Dh, new Height_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Person$Kx = MetaAdapterFactory.getConcept(0xa4e3811c15e04bd5L, 0x89008c50e0388469L, 0x561d0657bf3bacabL, "GreetingLanguage.structure.Person");
  }

  private static final class PROPS {
    /*package*/ static final SProperty height$44Dh = MetaAdapterFactory.getProperty(0xa4e3811c15e04bd5L, 0x89008c50e0388469L, 0x561d0657bf3bacabL, 0x561d0657bf3bacadL, "height");
  }
}
